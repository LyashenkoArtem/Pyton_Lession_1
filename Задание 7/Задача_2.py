# Реализовать проект расчета суммарного расхода ткани на производство одежды.
# Основная сущность (класс) этого проекта — одежда, которая может иметь определенное название.
# К типам одежды в этом проекте относятся пальто и костюм.
# У этих типов одежды существуют параметры: размер (для пальто) и рост (для костюма).
# Это могут быть обычные числа: V и H, соответственно.
#
# Для определения расхода ткани по каждому типу одежды использовать формулы:
# для пальто (V/6.5 + 0.5), для костюма (2 * H + 0.3).
# Проверить работу этих методов на реальных данных.
#
# Реализовать общий подсчет расхода ткани.
# Проверить на практике полученные на этом уроке знания:
# реализовать абстрактные классы для основных классов проекта,
# проверить на практике работу декоратора @property.

# Способ 1

from abc import abstractmethod
class Clother:
    @abstractmethod
    def __init__(self, V, H):
        self.tkan = (V / 6.5 + 0.5) + (2 * H + 0.3)

class Coat(Clother):
    def __init__(self, V):
        self.tkan = V / 6.5 + 0.5

class Jacket(Clother):
    def __init__(self, H):
        self.tkan = 2 * H + 0.3


m = Clother(48, 1.8)
c = Coat (48)
j = Jacket(1.8)


print(f'Объем необходимой ткани для пиджака: {c.tkan:.2f} метра')
print(f'Объем необходимой ткани для жакета: {j.tkan:.2f} метра')
print(f'Общий объем необходимой ткани равен: {m.tkan:.2f} метра')


# Способ 2

class Clothes:
    def __init__(self, V, H):
        self.V = V
        self.H = H

    def coat_sq (self):
        return self.V / 6.5 + 0.5

    def jacet_sq (self):
        return self.H * 2 + 0.3

    @property
    def full_sq(self):
        return (f'Общая площадь ткани равна: {self.coat_sq() + self.jacet_sq():.2f}')

c = Clothes(48, 1.8)
print(c.full_sq)
print(f'Объем ткани для пиджака {c.coat_sq():.2f}')
print(f'Объем ткани для жакета {c.jacet_sq():.2f}')

